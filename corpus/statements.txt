==================
Return statements
==================

func x() number {
  return 1
}

---

(program
  (function_definition
    name: (identifier)
    parameters: (parameter_list)
    type: (primitive_type)
    code: (block
      (return_statement (number)))))

==================
Function as block
==================

func x() number {
  2 + 3
  5 - 8
}

---

(program
  (function_definition
    name: (identifier)
    parameters: (parameter_list)
    type: (primitive_type)
    code: (block
      (binary_expression
        left: (number)
        right: (number))
      (binary_expression
        left: (number)
        right: (number)))))

==================
Function with parameter
==================

func x(number a, string b) {
  
}

---

(program
  (function_definition
    name: (identifier)
    parameters: (parameter_list
      (variable_declaration
        type: (primitive_type)
        name: (identifier))
      (variable_declaration
        type: (primitive_type)
        name: (identifier)))
    code: (block)))


==================
if statement
==================

if(5 == 2){
  5
}

---

(program
  (if_statement
    condition: (binary_expression left: (number) right: (number))
    code: (block (number))
  )
)

==================
if statement bool
==================

if(isTrue){
  5
}

---

(program
  (if_statement
    condition: (identifier)
    code: (block (number))
  )
)

==================
while statement
==================

while(a < 5){
  5
}

---

(program
  (while_statement
    condition: (binary_expression left: (identifier) right: (number))
    code: (block (number))
  )
)