==================
Binary expression
==================

2 + 3
2 / 3.5
28 * 3
2 - 3

---

(program
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number)))

==================
Binary expression Without Space
==================

2+ 3
28 /3.5
28 -3.5
28 +3.5
2*3
2-3

---

(program
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number))
  (binary_expression
    left: (number)
    right: (number)))

==================
Complexe binary expression
==================

2 + 3 * 4
3 * 4 + 2
3 * (4 + 2)

---

(program
  (binary_expression 
    left: (number) 
    right: (binary_expression left: (number) right: (number)))
  (binary_expression 
    left: (binary_expression left: (number) right: (number)) 
    right: (number))
  (binary_expression 
    left: (number) 
    right: (binary_expression left: (number) right: (number)))
)

==================
Binary expression with variable
==================

a + b
a / b
a * b
a - b

---

(program
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier)))

==================
Unary expression
==================

-5
!variable

---

(program
  (unary_expression
    right: (number))
  (unary_expression
    right: (identifier)))

==================
test expression
==================

a == z
a < z
a <= z
a > z
a >= z
a != z

---

(program
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier))
  (binary_expression
    left: (identifier)
    right: (identifier)))

==================
inc expression
==================

a++
a--
a += 5
a += z
a -= 5

---

(program 
  (unary_expression left: (identifier))
  (unary_expression left: (identifier))
  (binary_expression left: (identifier) right: (number))
  (binary_expression left: (identifier) right: (identifier))
  (binary_expression left: (identifier) right: (number)))